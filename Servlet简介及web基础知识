Servlet技术是一种基于Java语言，用于创建Web应用程序(处在服务器端并生成动态网页)
Servlet可以通过多种方式进行描述，具体取决于上下文
          Servlet是一种用于创建Web应用程序的技术。
          Servlet是一个API，它提供了许多接口和类，包括文档。
          Servlet是一个必须实现的接口，用于创建任何servlet。
          Servlet是一个扩展服务器功能并响应传入请求的类。它可以响应任何类型的请求。
          Servlet是部署在服务器上的Web组件，用于创建动态网页。
Web应用程序
          可从Web访问的应用程序。Web应用程序由Web组件(如：Servlet，JSP，Filter等)和其他组件(如HTML)组成。 Web组件通常在Web服务器中执行并响应HTTP请         求
CGI(通用网关接口)
          使Web服务器能够调用外部程序，并将HTTP请求信息传递给外部程序来处理请求。 对于每个请求，它启动一个新的进程。
Servlet的优势
          更好的性能：因为它为每个请求创建一个线程，而不是进程。
          更便携，可移植：因为它使用java语言，具有Java语言的特性。
          更强大：Servlet由JVM管理，所以不需要担心内存泄漏，垃圾收集等。
          更安全：因为它使用java语言，具有Java语言的特性。
Http协议
            超文本传输协议(HTTP)是用于协作，分布式，超媒体信息系统的应用级协议。 用于建立客户端和服务器之间的通信的数据通信协议
            HTTP是基于TCP / IP的通信协议，用于在万维网(WWW)上传送数据，如图像文件，查询结果，HTML文件等，默认端口为TCP 80。它提供了计算机的标准化方           式相互通信沟通
            HTTP的基本特征(超文本传输协议)：
          它允许Web服务器和浏览器通过网络交换数据的协议。
          它是一个请求响应协议。
          它在TCP端口80上默认使用可靠的TCP连接。
          无状态意味着每个请求被认为是新的请求。换句话说，默认情况下，服务器无法识别用户。
            HTTP(超文本传输协议)的基本特性
          HTTP是媒体独立的：指的是任何类型的媒体内容可以通过HTTP发送，只要服务器和客户端都可以处理数据内容。
          HTTP是无连接的：它是一种无连接方式，其中HTTP客户端即浏览器启动HTTP请求，并且在请求从服务器发送客户端断开连接并等待响应之后。
          HTTP是无状态的：客户端和服务器仅在当前请求期间彼此了解。之后，它们都忘了对方是谁。 由于协议的无状态特性，客户端和服务器都不能在网页上保留有关          不同请求的信息。
            HTTP是基于客户端/服务器的架构的请求/响应协议
Http请求
          计算机发送给包含各种各样的信息到Web服务器的请求称为HTTP请求
          HTTP客户端以请求消息的形式向服务器发送请求，其中包含以下信息：
                        请求行
                        源IP地址，代理和端口的分析
                        目的IP地址，协议，端口和主机的分析
                        请求的URI(统一资源标识符)
                        请求方法和内容
                        用户代理头
                        连接控制标题
                        缓存控制头
           HTTP请求方法指示对应请求URI(统一资源标识符)标识的资源执行的方法。此方法区分大小写，应以大写形式使用。
                  请求方法有以下几种：
                        GET	要求在请求的URL获取资源(内容)
                        POST	要求服务器接受附加正文信息。 就像GET请求一样，只是在请求中附加了额外的信息。
                        HEAD	只要求GET将返回的头部分。 就像GET，但没有正文。
                        TRACE	要求回送请求消息，用于测试或故障排除。
                        PUT	将所附的信息(正文)放在请求的URL上。
                        DELETE	要求删除所请求的URL的资源。
                        OPTIONS	要求请求URL中的东西可以响应HTTP方法的列表
           Http Get与Post请求区别
                      GET
                            数据以报头发送，所以只能发送有限数据的数据量。
                            GET请求不受保护，因为GET数据是直接在URL栏中显示的。
                            GET请求可以加入浏览器书签栏
                            GET请求是幂等的。这意味着直到第一个请求的响应前，第二个请求将被忽略
                            GET请求比POST请求更有效率，以及使用频率更高
                            它从指定的资源请求数据
                      POST
                            可以发送大量的数据，因为数据是以正文的形式发送的
                            POST请求相对安全一些，因为数据没有在URL栏中公开
                            POST请求不可以加入浏览器书签栏
                            POST请求不是幂等的
                            POST请求比GET请求效率更低一些，以及使用频率更低
                            它将处理的数据提交到指定的资源
                       GET请求的剖析
                            查询字符串(名称/值对)在GET请求的URL内发送：
                            GET /RegisterDao.jsp?key1=value1&key2=value2
                            GET请求的其他一些特性有：
                                      它仍然在浏览器历史中
                                      它可以加到书签
                                      它可以被缓存
                                      它有长度限制
                                      在处理敏感数据时不应该使用它
                                      它只能用于检索数据
                       POST请求的剖析
                              查询字符串(名称/值对)在HTTP消息正文中发送用于POST请求：
                                      POST/RegisterDao.jsp HTTP/1.1  
                                      Host: www.yiibai.com  
                                      key1=value1&key2=value2
                              POST请求的其他一些特性：
                                      POST请求无法加入书签
                                      POST请求对数据长度没有限制
                                      POST请求从不缓存
                                      POST请求不会保留在浏览器历史记录中
Servlet容器
                      容器是一种为JavaEE(J2EE)应用程序提供运行时的环境。 客户端/用户只能从服务器请求静态页面。 如果用户想要按照输入读取网页，则在                   Java中使用servlet容器,Servlet容器在Java中用于动态生成服务器端的网页
                      可将Servlet容器状态分为三种类型：
                            独立：典型的基于Java的服务器，servlet容器和Web服务器是单个程序的组成部分。例如： - Tomcat自身运行
                            进程内：与Web服务器分离，因为在主服务器的地址空间内运行不同的程序作为插件。例如： - 在JBoss中运行的Tomcat。
                            进程外：Web服务器和servlet容器是在不同进程中运行的不同程序。要在它们之间通信，Web服务器使用由servlet容器提供的插件。
                      Servlet容器执行许多操作，如下所示：
                            生命周期管理
                            多线程支持
                            对象池
                            安全等
服务器：Web与应用程序
                  服务器是接受并响应其他程序(称为客户端)的请求的设备或计算机程序。它用于管理网络资源和运行提供服务的程序或软件
                  Web服务器
                          Web服务器只包含web或servlet容器。它可以用于运行servlet，jsp，struts，jsf等。它不能用于EJB。

                          Web服务器是一种可以存储网页内容的计算机。通常，网络服务器可以用于托管网站，但也使用了其他一些Web服务器，如FTP，电子邮                         件，存储，游戏等。

                          Web服务器的示例是：Apache Tomcat和Resin。
                          
                   Web服务器工作
                              通过使用脚本与数据库进行通信并生成响应内容。
                              将文件发送到与请求的URL相关联的客户端
                   应用服务器
                          应用服务器包含Web和EJB容器。 它可以用于servlet，jsp，struts，jsf，ejb等。它是一个基于组件的产品，位于以服务器为中心的                       架构的中间层
                          提供用于状态维护和安全性的中间件服务，以及持久性和数据访问
                          一些常用应用服务器的示例是：
                                JBoss：来自JBoss社区的开源服务器。
                                Glassfish：由Sun Microsystem提供，现已被Oracle收购。
                                Weblogic：由Oracle提供，它更安全。
                                Websphere：由IBM提供。
HTTP头内容类型
                      内容类型(ContentType)也称为MIME(多用途互联网邮件扩展)类型。它是一个HTTP头，提供用于发送到浏览器的内容的描述。
                      MIME提供给邮件服务的功能如下：
                                它支持非ASCII字符
                                它支持单个消息中的多个附件
                                它支持包含可执行音频，图像和视频文件等的附件。
                                它支持无限的邮件长度。
                      常用的内容类型如下：
                                text/html
                                text/plain
                                application/msword
                                application/vnd.ms-excel
                                application/jar
                                application/pdf
                                application/octet-stream
                                application/x-zip
                                images/jpeg
                                images/png
                                images/gif
                                audio/mp3
                                video/mp4
                                video/quicktime
                      

                   
   


                       
               


